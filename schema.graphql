type Query {
    usuario(id: ID!): Usuario
    receta(id: ID!): Receta
    recetas(limit: Int): [Receta]
}

type Mutation {
    crearUsuario(input: CrearUsuarioInput!): Usuario
    actualizarUsuario(input: ActualizarUsuarioInput!): Usuario
    eliminarUsuario(id: ID!): Usuario
    crearReceta(input: CrearRecetaInput!): Receta
    actualizarReceta(input: ActualizarRecetaInput!): Receta
    eliminarReceta(id: ID!): Receta
}

type Usuario {
    id: ID!
    nombre: String!
    apellido: String
    correo: String!
    recetas: [Receta]
    creado_en: String!
}

type Receta {
    id: ID!
    titulo: String!
    descripcion: String
    ingredientes: [String]!
    pasos: [String]!
    usuario: Usuario!
    creado_en: String!
}

input CrearUsuarioInput {
    nombre: String!
    apellido: String
    correo: String!
}

input ActualizarUsuarioInput {
    id: ID!
    nombre: String
    apellido: String
    correo: String
}

input CrearRecetaInput {
    titulo: String!
    descripcion: String
    ingredientes: [String]!
    pasos: [String]!
    usuario_id: ID!
}

input ActualizarRecetaInput {
    id: ID!
    titulo: String
    descripcion: String
    ingredientes: [String]
    pasos: [String]
}
type Subscription {
    nuevaReceta: Receta
}