type Query {
    usuario(id: ID!): Usuario
    usuarios: [Usuario] 
    receta(id: ID!): Receta
    recetas(limit: Int): [Receta]
}

type Mutation {
    crearUsuario(input: CrearUsuarioInput!): Usuario
    actualizarUsuario(input: ActualizarUsuarioInput!): Usuario
    eliminarUsuario(id: ID!): Usuario
    crearReceta(input: CrearRecetaInput!): Receta
    actualizarReceta(input: ActualizarRecetaInput!): Receta
    eliminarReceta(id: ID!): Receta
}

type Usuario {
    id: ID!
    name: String!
    last_name: String
    email: String!
    recetas: [Receta]  #  recetas asociadas a un usuario
    created_at: String!
    password: String
}

type Receta {
    id: ID!
    nombre: String!
    descripcion: String
    ingredientes: [String]!
    pasos: [String]!
    usuario: Usuario!
    creado_en: String!
}

input CrearUsuarioInput {
    name: String!
    last_name: String
    email: String!
    password: String!
}

input ActualizarUsuarioInput {
    id: ID!
    name: String
    last_name: String
    email: String
    password: String
}

input CrearRecetaInput {
    nombre: String!
    descripcion: String
    ingredientes: [String]!
    pasos: [String]!
    usuario_id: ID!
}

input ActualizarRecetaInput {
    id: ID!
    nombre: String
    descripcion: String
    ingredientes: [String]
    pasos: [String]
}

type Subscription {
    nuevaReceta: Receta
}
